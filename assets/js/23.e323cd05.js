(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{428:function(t,n,a){"use strict";a.r(n);var e=a(2),s=Object(e.a)({},(function(){var t=this._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("h2",{attrs:{id:"json"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#json"}},[this._v("#")]),this._v(" JSON")]),this._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('\t-IE7-不支持-如果需兼容IE7- 则映入一个json.js文件处理\n\t-JavaScript Object Notaion JS对象表示法\n\t-是一个特殊的字符串，可以被任何的语言识别-数据的交互\n\t-格式与JS格式一样，只不过JSON中的属性名必须加""\n\t-作用：数据传递\n\t-分类\n\t\t-JSON对象\n\t\t-JSON数组\n\tJS对象\n\tvar obj = "name":"毛", "age":18; //js中属性名 "" \'\' 不加都行\n\n\t此对象对应的JSON字符串\n\tvar obj\t= \'"name":"毛", "age":18\'; //加上\'\'\n\n\t允许的值\n\t-String\n\t-Number\n\t-boolean\n\t-null\n\t-对象（不包含函数）\n\t-数组\n\n\t将JSON字符串转为JS对象 \n\t-JSON.parse()  parse/解析\n\tex.\n\t\tvar obj\t= \'{"name":"毛", "age":18\'};\n\t\tvar o = JSON.parse(obj)\n\n\t将JS对象转为JSON\n\t\t-JSON.stringify() //不用手动加""\n\n\t以下了解\n\tIE7-时也可以用eval函数\n\t\teval()\n\t\t-可以执行字符串形式的JS代码\n\t\t-如果字符串中含有{}，会将其认为代码块，在字符串前后加（）\n\t\t-虽强大，但性能差，且具有安全隐患\n\n\tvar obj\t= \'（"name":"毛", "age":18\'）\';\n\tvar o = eval(obj)\n\t或\n\tvar o = eval("("+obj+")")\n')])])])])}),[],!1,null,null,null);n.default=s.exports}}]);