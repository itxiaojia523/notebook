(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{487:function(a,t,r){"use strict";r.r(t);var s=r(2),v=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"书"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#书"}},[a._v("#")]),a._v(" 书")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("JavaScript DOM 编程艺术\nJavsScript高级程序设计\n")])])]),t("h1",{attrs:{id:"代码的未来"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代码的未来"}},[a._v("#")]),a._v(" 代码的未来")]),a._v(" "),t("h2",{attrs:{id:"编程的时间和空间"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编程的时间和空间"}},[a._v("#")]),a._v(" 编程的时间和空间")]),a._v(" "),t("h3",{attrs:{id:"编程的本质"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编程的本质"}},[a._v("#")]),a._v(" 编程的本质")]),a._v(" "),t("p",[a._v("将编程这个行为理解成“向计算机传达要处理的内容”是片面的,\n工作成果的软件（中的大部分）都是为了完成人类所要完\n成的工作而设计出来的。因此，“人们到底想要\n什么？想要这些东西的本质又是什么？要实现这个目的\n严格来说需要怎样的操作步骤？”思考并解决这些问题，\n才是软件开发中最重要的工作。换句话说，编程的本质\n在于“"),t("strong",[a._v("思考")]),a._v("”。")]),a._v(" "),t("h3",{attrs:{id:"未来预测"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#未来预测"}},[a._v("#")]),a._v(" 未来预测")]),a._v(" "),t("h4",{attrs:{id:"以不变应万变"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#以不变应万变"}},[a._v("#")]),a._v(" 以不变应万变")]),a._v(" "),t("p",[a._v("由摩尔定律所引发的计算机方面的变化可以用翻天覆地来形容，但也并不是所有的一切都\n在发生变化")]),a._v(" "),t("p",[a._v("算法\n规范\n个技术本身是很早以前就存在的，只是一般人不知道而已。而更重要的一个\n原因是，人类自身的变化并没有那么快。")]),a._v(" "),t("h4",{attrs:{id:"极限未来预测"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#极限未来预测"}},[a._v("#")]),a._v(" 极限未来预测")]),a._v(" "),t("p",[a._v("当我第一次构建出 XP 时，我想到了控制板上的旋钮。每个旋钮都是一种（经验\n告诉我的）有效的实践，我将所有的旋钮都调到 10，然后等着看会出现什么情况。")]),a._v(" "),t("p",[a._v("。比如说，“如果计算机的价格越来越便宜，那\n当它便宜到极致的时候会怎么样呢？”“如果我们能够买到超高性能的计算机会怎么样呢？”“如\n果计算机的存储容量增大到超乎想象的程度会怎么样呢？”“如果网络带宽变得非常大的话会怎\n么样呢？”")]),a._v(" "),t("p",[a._v("，我们来看看价格。如果今后计算机的价格不断下降，这将意味着什么呢？我想这意\n味着两件事。第一，普通人所能拥有的计算机的性能将比现在大大提高；第二，现在还没有使\n用计算机的地方，以后都会安装上计算机")]),a._v(" "),t("p",[a._v("利用这么多的 CPU，软件及其开发\n环境又会如何进化呢？")]),a._v(" "),t("p",[a._v("我认为“未来的编程语言”之间，应该在如何充分利用 CPU 资源这个\n方面进行争夺。即便是现在，也已经有很多语言提供了并行处理的功能，而今后并行处理则会\n变得愈发重要。如果能将多个核心的性能充分利用起来，说不定每个单独核心的性能就变得没\n有那么重要的。")]),a._v(" "),t("p",[a._v("存储器的容量")]),a._v(" "),t("p",[a._v("在存储器容量方面，与未来预测相关并值得关注的一个动向，就是访问速度。虽然容量在\n以惊人的速度增长，但读取数据的速度却没有按照匹配的速度来提高。硬盘的寻址速度没什么\n长进，总线的传输速度也是半斤八两。不过，像闪存这样比硬盘更快的外部存储设备，现在也\n已经变得越来越便宜了，由闪存构成的固态硬盘（Solid State Drive，SSD）已经相当普遍，完\n全可以作为硬盘的替代品。按照这个趋势发展下去，在不久的将来，说不定由超高速低容量的\n核心内置缓存、高速但断电会丢失数据的主内存（RAM），以及低速但可永久保存数据的外部\n存储器（HDD）所构成的层次结构将会消失，取而代之的可能将会是由大规模的缓存，以及高\n速且能永久保存数据的内存所构成的新的层次结构。如果高速的主内存能够永久保存数据，依\n赖过去结构的数据库等系统都将产生大规模的结构改革。实际上，以高速 SSD 为前提的数据库\n系统，目前已经在进行研发了。")]),a._v(" "),t("h2",{attrs:{id:"编程语言的过去、现在和未来"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编程语言的过去、现在和未来"}},[a._v("#")]),a._v(" 编程语言的过去、现在和未来")]),a._v(" "),t("h3",{attrs:{id:"编程语言的世界"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编程语言的世界"}},[a._v("#")]),a._v(" 编程语言的世界")]),a._v(" "),t("p",[a._v("20 年后的编程语言\nRPC（Remote Procedure Call，远程过程调用）等显式地使用分\n布处理和并行处理的形式，早晚会遇到瓶颈")]),a._v(" "),t("h3",{attrs:{id:"dsl-特定领域语言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dsl-特定领域语言"}},[a._v("#")]),a._v(" DSL（特定领域语言）")]),a._v(" "),t("p",[a._v("使用 DSL 可以让程序在整体上以更简洁的形式进行表达，这意味着无论是写程序还是\n读程序的成本都降低了，同时也意味着对于非编程专家的一般人来说，编程的大门正向他们敞开")]),a._v(" "),t("p",[a._v("不涉及对象领域的内部细节，而是在高级层面上进行描述，这就是近\n半个世纪以来编程语言进化的方向——抽象化。也就是说，DSL，尤其是内部 DSL，也许就是\n由抽象化的不断推进所引领的编程语言未来发展的方向之一吧。")]),a._v(" "),t("p",[a._v("DSL 应该是将面向特定领域的 API 设计成优秀的 DSL 这样一个设计的\n过程。\n据说，在诞生了 UNIX 的 AT&T 贝尔实验室①中有一句名言：库设计就是语言设计（Library\ndesign is language design）。我们在思考编程语言的时候，大多仅强调语法，但如果脱离了相当\n于词汇的库、类和方法，语言也就无从思考。")]),a._v(" "),t("p",[a._v("所谓元编程，就是“用程序来编写程序”的意思")]),a._v(" "),t("p",[a._v("像 C 这样的编程语言中，语言本身所提供的数据，基本上都是通过指针（地址）和数值来\n表现的。在语言层面上虽然有数组和结构体的概念，但经过编译之后，这些信息就丢失了。\n不过，“现代派”的语言在运行的时候，还会保留这样一些信息。例如在 C++ 中，一个对\n象是知道自己的数据类型的，通过这个信息，可以在调用虚拟成员函数时，选择与自己的类型（类）\n相匹配的函数。在 Java 中也是一样。\n像这样获取和变更程序本身信息的功能，被称为反射（Reflection）。将程序获取自身信息的\n行为，用“看着（镜子中）反射出的身影来反省自己”这样的语境来表达，听起来还挺文艺的呢。")]),a._v(" "),t("h3",{attrs:{id:"内存管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内存管理"}},[a._v("#")]),a._v(" 内存管理")]),a._v(" "),t("h3",{attrs:{id:"异常处理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#异常处理"}},[a._v("#")]),a._v(" 异常处理")]),a._v(" "),t("h2",{attrs:{id:"编程语言的新潮流"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编程语言的新潮流"}},[a._v("#")]),a._v(" 编程语言的新潮流")]),a._v(" "),t("h3",{attrs:{id:"语言的设计"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#语言的设计"}},[a._v("#")]),a._v(" 语言的设计")]),a._v(" "),t("h3",{attrs:{id:"go"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#go"}},[a._v("#")]),a._v(" Go")]),a._v(" "),t("h3",{attrs:{id:"dart"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dart"}},[a._v("#")]),a._v(" Dart")]),a._v(" "),t("h3",{attrs:{id:"coffeescript"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#coffeescript"}},[a._v("#")]),a._v(" CoffeeScript")]),a._v(" "),t("h3",{attrs:{id:"lua"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lua"}},[a._v("#")]),a._v(" Lua")]),a._v(" "),t("h2",{attrs:{id:"云计算时代的编程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#云计算时代的编程"}},[a._v("#")]),a._v(" 云计算时代的编程")]),a._v(" "),t("h3",{attrs:{id:"可扩展性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#可扩展性"}},[a._v("#")]),a._v(" 可扩展性")]),a._v(" "),t("h3",{attrs:{id:"c10k-问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#c10k-问题"}},[a._v("#")]),a._v(" C10K 问题")]),a._v(" "),t("h3",{attrs:{id:"hashfold"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hashfold"}},[a._v("#")]),a._v(" HashFold")]),a._v(" "),t("h3",{attrs:{id:"进程间通信"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#进程间通信"}},[a._v("#")]),a._v(" 进程间通信")]),a._v(" "),t("h3",{attrs:{id:"rack-与-unicorn"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rack-与-unicorn"}},[a._v("#")]),a._v(" Rack 与 Unicorn")]),a._v(" "),t("h2",{attrs:{id:"支撑大数据的数据存储技术"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#支撑大数据的数据存储技术"}},[a._v("#")]),a._v(" 支撑大数据的数据存储技术")]),a._v(" "),t("h3",{attrs:{id:"键-值存储"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#键-值存储"}},[a._v("#")]),a._v(" 键 - 值存储")]),a._v(" "),t("h3",{attrs:{id:"nosql"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nosql"}},[a._v("#")]),a._v(" NoSQL")]),a._v(" "),t("h3",{attrs:{id:"用-ruby-来操作-mongodb"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#用-ruby-来操作-mongodb"}},[a._v("#")]),a._v(" 用 Ruby 来操作 MongoDB")]),a._v(" "),t("h3",{attrs:{id:"sql-数据库的反击"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sql-数据库的反击"}},[a._v("#")]),a._v(" SQL 数据库的反击")]),a._v(" "),t("h3",{attrs:{id:"memcached-和它的伙伴们"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#memcached-和它的伙伴们"}},[a._v("#")]),a._v(" memcached 和它的伙伴们")]),a._v(" "),t("h2",{attrs:{id:"多核时代的编程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多核时代的编程"}},[a._v("#")]),a._v(" 多核时代的编程")]),a._v(" "),t("h3",{attrs:{id:"摩尔定律"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#摩尔定律"}},[a._v("#")]),a._v(" 摩尔定律")]),a._v(" "),t("p",[a._v("LSI 中的晶体管数量每 18 个月增加一倍")]),a._v(" "),t("p",[a._v("摩尔定律的局限")]),a._v(" "),t("p",[a._v("在 3GHz 的频率下，波形由开到关\n（即 1 个时钟周期）的时间内，光只能前进 10cm 的距离。")]),a._v(" "),t("p",[a._v("LSI 中的电路是采用一种印刷技术②印上去的，在这样细微的尺度中，光的波长甚至都成\n了大问题，因为如果图像的尺寸比光的波长还小，就无法清晰地转印。可见光的波长范围约为\n400 ～ 800nm，因此最近 45nm 制程的 LSI 是无法用可见光来制造的。")]),a._v(" "),t("p",[a._v("由于漏电流和热密度等问题，最近几年，CPU 的性能提高似乎遇到了瓶颈。大家可能也都\n注意到了，前几年在店里卖的电脑还都配备了 3GHz、4GHz 的 CPU，而最近主流的电脑配置却\n是清一色的 2GHz 上下。")]),a._v(" "),t("p",[a._v("由于通过提高单一 CPU 的密度来实现性能的提升已经非常困难，因此在一个 LSI 中\n集成多个 CPU 的方法逐渐成为主流。像英特尔公司的 Core2 i5、i7 这样在一个 LSI 上集成 2 ～\n8 个 CPU 核心的“多核”（Multi-core）CPU，目前已经用在了普通的电脑中，这也反映了上面\n提到的这一趋势")]),a._v(" "),t("p",[a._v("而多 CPU 化、内存容量的\n增大、由硬盘向半导体 SSD 转变等则会成为主流")]),a._v(" "),t("h3",{attrs:{id:"unix-管道"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#unix-管道"}},[a._v("#")]),a._v(" UNIX 管道")]),a._v(" "),t("h3",{attrs:{id:"非阻塞-i-o"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#非阻塞-i-o"}},[a._v("#")]),a._v(" 非阻塞 I / O")]),a._v(" "),t("h3",{attrs:{id:"node-js"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#node-js"}},[a._v("#")]),a._v(" node.js")]),a._v(" "),t("h3",{attrs:{id:"zeromq"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zeromq"}},[a._v("#")]),a._v(" ZeroMQ")])])}),[],!1,null,null,null);t.default=v.exports}}]);